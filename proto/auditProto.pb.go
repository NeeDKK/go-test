// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.15.3
// source: auditProto.proto

package test

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuditProtoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AuditProtoResponse) Reset() {
	*x = AuditProtoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auditProto_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditProtoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditProtoResponse) ProtoMessage() {}

func (x *AuditProtoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auditProto_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditProtoResponse.ProtoReflect.Descriptor instead.
func (*AuditProtoResponse) Descriptor() ([]byte, []int) {
	return file_auditProto_proto_rawDescGZIP(), []int{0}
}

func (x *AuditProtoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AuditProtoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtoMain string `protobuf:"bytes,1,opt,name=proto_main,json=protoMain,proto3" json:"proto_main,omitempty"`
}

func (x *AuditProtoRequest) Reset() {
	*x = AuditProtoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auditProto_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditProtoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditProtoRequest) ProtoMessage() {}

func (x *AuditProtoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auditProto_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditProtoRequest.ProtoReflect.Descriptor instead.
func (*AuditProtoRequest) Descriptor() ([]byte, []int) {
	return file_auditProto_proto_rawDescGZIP(), []int{1}
}

func (x *AuditProtoRequest) GetProtoMain() string {
	if x != nil {
		return x.ProtoMain
	}
	return ""
}

type AuditProtoMain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContentMessage string            `protobuf:"bytes,1,opt,name=contentMessage,proto3" json:"contentMessage,omitempty"`
	RequestHead    *AuditRequestHead `protobuf:"bytes,2,opt,name=requestHead,proto3" json:"requestHead,omitempty"`
}

func (x *AuditProtoMain) Reset() {
	*x = AuditProtoMain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auditProto_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditProtoMain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditProtoMain) ProtoMessage() {}

func (x *AuditProtoMain) ProtoReflect() protoreflect.Message {
	mi := &file_auditProto_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditProtoMain.ProtoReflect.Descriptor instead.
func (*AuditProtoMain) Descriptor() ([]byte, []int) {
	return file_auditProto_proto_rawDescGZIP(), []int{2}
}

func (x *AuditProtoMain) GetContentMessage() string {
	if x != nil {
		return x.ContentMessage
	}
	return ""
}

func (x *AuditProtoMain) GetRequestHead() *AuditRequestHead {
	if x != nil {
		return x.RequestHead
	}
	return nil
}

type AuditRequestHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeadMessage string `protobuf:"bytes,1,opt,name=headMessage,proto3" json:"headMessage,omitempty"`
}

func (x *AuditRequestHead) Reset() {
	*x = AuditRequestHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auditProto_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditRequestHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditRequestHead) ProtoMessage() {}

func (x *AuditRequestHead) ProtoReflect() protoreflect.Message {
	mi := &file_auditProto_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditRequestHead.ProtoReflect.Descriptor instead.
func (*AuditRequestHead) Descriptor() ([]byte, []int) {
	return file_auditProto_proto_rawDescGZIP(), []int{3}
}

func (x *AuditRequestHead) GetHeadMessage() string {
	if x != nil {
		return x.HeadMessage
	}
	return ""
}

var File_auditProto_proto protoreflect.FileDescriptor

var file_auditProto_proto_rawDesc = []byte{
	0x0a, 0x10, 0x61, 0x75, 0x64, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x05, 0x61, 0x75, 0x64, 0x69, 0x74, 0x22, 0x28, 0x0a, 0x12, 0x41, 0x75, 0x64,
	0x69, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x32, 0x0a, 0x11, 0x41, 0x75, 0x64, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x4d, 0x61, 0x69, 0x6e, 0x22, 0x73, 0x0a, 0x0e, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x61, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x39, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x52,
	0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x22, 0x34, 0x0a, 0x10,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x68, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x32, 0xf3, 0x02, 0x0a, 0x0e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x10, 0x4f, 0x62, 0x74, 0x61, 0x69, 0x6e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x41, 0x75, 0x64, 0x69, 0x74, 0x12, 0x18, 0x2e, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x41, 0x75, 0x64, 0x69,
	0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x42, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x2e,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x18, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01,
	0x12, 0x42, 0x0a, 0x09, 0x46, 0x6c, 0x6f, 0x77, 0x41, 0x75, 0x64, 0x69, 0x74, 0x12, 0x18, 0x2e,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x09, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x18, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2e, 0x2f, 0x74,
	0x65, 0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_auditProto_proto_rawDescOnce sync.Once
	file_auditProto_proto_rawDescData = file_auditProto_proto_rawDesc
)

func file_auditProto_proto_rawDescGZIP() []byte {
	file_auditProto_proto_rawDescOnce.Do(func() {
		file_auditProto_proto_rawDescData = protoimpl.X.CompressGZIP(file_auditProto_proto_rawDescData)
	})
	return file_auditProto_proto_rawDescData
}

var file_auditProto_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_auditProto_proto_goTypes = []interface{}{
	(*AuditProtoResponse)(nil), // 0: audit.AuditProtoResponse
	(*AuditProtoRequest)(nil),  // 1: audit.AuditProtoRequest
	(*AuditProtoMain)(nil),     // 2: audit.AuditProtoMain
	(*AuditRequestHead)(nil),   // 3: audit.AuditRequestHead
}
var file_auditProto_proto_depIdxs = []int32{
	3, // 0: audit.AuditProtoMain.requestHead:type_name -> audit.AuditRequestHead
	1, // 1: audit.AuditInterface.ObtainProtoAudit:input_type -> audit.AuditProtoRequest
	1, // 2: audit.AuditInterface.EventInfo:input_type -> audit.AuditProtoRequest
	1, // 3: audit.AuditInterface.EventInfoStream:input_type -> audit.AuditProtoRequest
	1, // 4: audit.AuditInterface.FlowAudit:input_type -> audit.AuditProtoRequest
	1, // 5: audit.AuditInterface.AllowList:input_type -> audit.AuditProtoRequest
	0, // 6: audit.AuditInterface.ObtainProtoAudit:output_type -> audit.AuditProtoResponse
	0, // 7: audit.AuditInterface.EventInfo:output_type -> audit.AuditProtoResponse
	0, // 8: audit.AuditInterface.EventInfoStream:output_type -> audit.AuditProtoResponse
	0, // 9: audit.AuditInterface.FlowAudit:output_type -> audit.AuditProtoResponse
	0, // 10: audit.AuditInterface.AllowList:output_type -> audit.AuditProtoResponse
	6, // [6:11] is the sub-list for method output_type
	1, // [1:6] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_auditProto_proto_init() }
func file_auditProto_proto_init() {
	if File_auditProto_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_auditProto_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditProtoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auditProto_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditProtoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auditProto_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditProtoMain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auditProto_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditRequestHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_auditProto_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_auditProto_proto_goTypes,
		DependencyIndexes: file_auditProto_proto_depIdxs,
		MessageInfos:      file_auditProto_proto_msgTypes,
	}.Build()
	File_auditProto_proto = out.File
	file_auditProto_proto_rawDesc = nil
	file_auditProto_proto_goTypes = nil
	file_auditProto_proto_depIdxs = nil
}
