package main

import (
	"bytes"
	"fmt"
	"github.com/ErmaiSoft/GoOpenXml/word"
	"io/ioutil"
	"os"
	"text/template"
)

type AAAA struct {
	Aaa string `json:"aaa"`
}

var (
	base64String = ""
)

func main() {
	reportData := AAAA{
		Aaa: base64String,
	}
	open, _ := os.Open("/Users/wuzijie/Downloads/Doc1(1).xml")
	templateContent, err := ioutil.ReadAll(open)
	if err != nil {
		fmt.Println(err.Error())
	}
	reportPath := "b.xml"
	temp := template.New(reportPath)
	parse, err := temp.Parse(string(templateContent))
	if err != nil {
		fmt.Println(err.Error())
	}
	outputBuf := new(bytes.Buffer)
	err = parse.Execute(outputBuf, &reportData)
	if err != nil {
		fmt.Println(err.Error())
	}
	docx := word.CreateDocx()
	docx.WriteToFile("c.docx")
	err = ioutil.WriteFile("c.doc", outputBuf.Bytes(), 0777)
	if err != nil {
		fmt.Println(err.Error())
	}
}
